#include "arduino.ceu"
#define SIZE 3
#define COLS SIZE*SIZE
#define BPIN1 _A0
#define BPIN2 _A1
#define BPIN3 _A2
#define BPIN4 _A3

native do
	##include <LedCube.h>
	byte levelPins[SIZE] = {11,12,13};
	byte colPins[COLS] = {2,3,4,5,6,7,8,9,10};
	bool on[SIZE][COLS];
end

loop i in SIZE do
	loop j in COLS do
		_on[i][j] = false;
	end
end

loop i in 12 do
	_pinMode(i+2, _OUTPUT);
end
_pinMode(BPIN1, _INPUT);
_pinMode(BPIN2, _INPUT);
_pinMode(BPIN3, _INPUT);
_pinMode(BPIN4, _INPUT);

class Cube with
	function(int lvl,int col, bool val)=>void set;
	function(int col, bool val)=>void setCol;
	function(int level, bool val)=>void setLevel;
	function(void)=>void turnOn;
	function(void)=>void turnOff;
do
	function(int lvl,int col, bool val)=>void set do
		_on[lvl][col] = val;
	end

	function(int col, bool val)=>void setCol do
		loop i in SIZE do
			this.set(i,col,val);
		end
	end

	function(int level, bool val)=>void setLevel do
		loop i in COLS do
			this.set(level,i,val);
		end
	end

	function (void)=>void turnOn do
		loop i in SIZE do
			loop j in COLS do
				this.set(i,j,1);
			end
		end
	end

	function (void)=>void turnOff do
        loop i in SIZE do
            loop j in COLS do
                this.set(i, j, 0);
            end
        end
    end
end

//_Serial.begin(9600);
var int buttonState1 = 0;
var int buttonState2 = 0;
var int buttonState3 = 0;
var int buttonState4 = 0;

var int plane = 0;
var int col = 4;

var bool isDown1 = false;
var bool isDown2 = false;
var bool isDown3 = false;
var bool isDown4 = false;

var Cube cube;
par do
	loop do
		cube.set(plane, col, 1);
		await 40ms;	
	end
with
	loop do
		
		if _analogRead(BPIN1) > 900 and not isDown1 then
			isDown1 = true;
			cube.set(plane, col, 0);
			col = col - 1;
	   else/if _analogRead(BPIN2) > 900 and not isDown2 then
		   isDown2 = true;
			cube.set(plane, col, 0);
			plane = plane + 1;
	   else/if _analogRead(BPIN3) > 900 and not isDown3 then
			isDown3 = true;
			cube.set(plane, col, 0);
			plane = plane - 1;
	   else/if _analogRead(BPIN4) > 900 and not isDown4 then
		   isDown4 = true;
			cube.set(plane, col, 0);
			col = col + 1;
	   end
	  
	   if _analogRead(BPIN1) < 900 then
		   isDown1 = false;
	   end

		if _analogRead(BPIN2) < 900 then
		   isDown2 = false;
		end

	   if _analogRead(BPIN3) < 900 then
		   isDown3 = false;
	   end

		if _analogRead(BPIN4) < 900 then
	   	isDown4 = false;
		end

		if col > 8 then
			col = 0;
		else/if	col < 0 then
			col = 8;
		else/if plane < 0 then
			plane = 2;
		else/if	plane > 2 then
			plane = 0;
		end
		await 40ms;
	end
with
	loop do
		loop i in SIZE do
			_digitalWrite(_levelPins[(i+2)%3], _LOW);
			_digitalWrite(_levelPins[(i+1)%3], _LOW);
			_digitalWrite(_levelPins[i%3], _HIGH);
			loop j in COLS do
				_digitalWrite(_colPins[j], _on[i%3][j]);
			end
			await 6ms;
		end
	end
end
